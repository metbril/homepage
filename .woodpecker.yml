# hugo.yml
#
# Takes a repository with Hugo source, generates the static site and
# pushes the result to Codeberg pages
#
# Needs a codeberg access token (codeberg_token) as a secret in Woodpecker config
# Also uses another secret (mail) with email address for git config
#
# For custom domains to work, place the .domains file in the static folder of the source repository
#
# The HUGO_OUTPUT variable must be set to the build output folder configured in Hugo
#

when:
  # Exclude pipeline to be run on "pages" branch
  - branch:
      exclude: pages
  - event: pull_request
    branch: ${CI_REPO_DEFAULT_BRANCH}
  - event: push

# Recursive cloning is used to fully clone the themes given as Git submodules
# Override ssh submodule:
# https://woodpecker-ci.org/docs/usage/workflow-syntax#git-submodules
clone:
  git:
    image: woodpeckerci/plugin-git
    settings:
      recursive: true
      submodule_override:
+       themes/grotius: https://codeberg.org/r12t/hugo-grotius-v2.git

steps:
  # TODO: lint markdown source
  lint:
    image: davidanson/markdownlint-cli2:latest
    commands:
      - markdownlint-cli2 "content/**/*.md"
    when:
      - event: [push, pull_request]

  spell:
    image: ghcr.io/streetsidesoftware/cspell:latest
    commands:
      - node --version
      - npm --version
      - npm install -g @cspell/dict-nl-nl
      - cspell-cli link add @cspell/dict-nl-nl
      - cspell-cli --locale "nl,en-GB" "content/**/*.md"
    when:
      - event: [push, pull_request]

  # Build hugo static files
  build:
    image: floryn90/hugo:latest-ext
    environment:
      - HUGO_ENV=production
    commands:
      - hugo --minify
    when:
      - event: [push, pull_request]
    depends_on:
      - lint
      - spell

  publish:
    image: bitnami/git
    # Must be set in Woodpecker configuration
    secrets: [mail, codeberg_token]
    environment:
      - HUGO_OUTPUT=public
    commands:
      # Git configuration
      - git config --global user.email $MAIL
      - git config --global user.name "Woodpecker CI"
      - git clone -b pages https://$CODEBERG_TOKEN@codeberg.org/$CI_REPO.git $CI_REPO_NAME

      # Copy build step output to repository folder
      - cp -ar $HUGO_OUTPUT/. $CI_REPO_NAME/

      # Commit and push all static files with pipeline started timestamp
      - cd $CI_REPO_NAME
      - git add .
      - git commit -m "Woodpecker CI ${CI_COMMIT_SHA}"
      - git push
    when:
      - event: push
        branch: ${CI_REPO_DEFAULT_BRANCH}
    depends_on:
      - build
